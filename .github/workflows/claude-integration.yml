# Claude Code GitHub Integration
name: Claude Code Assistant

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, edited]
  pull_request:
    types: [opened, edited, synchronize, ready_for_review]

jobs:
  claude-assistant:
    runs-on: ubuntu-latest
    if: contains(github.event.comment.body, '@claude') || contains(github.event.issue.body, '@claude') || contains(github.event.pull_request.body, '@claude')

    permissions:
      contents: write
      pull-requests: write
      issues: write
      actions: read
      checks: read

    steps:
      - name: 📦 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 📋 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci

      - name: 🤖 Process Claude mention
        id: claude-process
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CLAUDE_API_KEY: ${{ secrets.CLAUDE_API_KEY }}
        run: |
          # Extract mention context
          if [ "${{ github.event_name }}" = "issue_comment" ]; then
            MENTION_BODY="${{ github.event.comment.body }}"
            CONTEXT_TYPE="comment"
            CONTEXT_URL="${{ github.event.comment.html_url }}"
          elif [ "${{ github.event_name }}" = "issues" ]; then
            MENTION_BODY="${{ github.event.issue.body }}"
            CONTEXT_TYPE="issue"
            CONTEXT_URL="${{ github.event.issue.html_url }}"
          elif [ "${{ github.event_name }}" = "pull_request" ]; then
            MENTION_BODY="${{ github.event.pull_request.body }}"
            CONTEXT_TYPE="pull_request"
            CONTEXT_URL="${{ github.event.pull_request.html_url }}"
          fi

          echo "mention_body=${MENTION_BODY}" >> $GITHUB_OUTPUT
          echo "context_type=${CONTEXT_TYPE}" >> $GITHUB_OUTPUT
          echo "context_url=${CONTEXT_URL}" >> $GITHUB_OUTPUT

      - name: 🧪 Run validation pipeline
        if: contains(steps.claude-process.outputs.mention_body, 'validate') || contains(steps.claude-process.outputs.mention_body, 'check')
        run: |
          npm run validate:enhanced --verbose
          echo "validation_status=completed" >> $GITHUB_OUTPUT
        continue-on-error: true

      - name: 📊 Generate response
        env:
          MENTION_BODY: ${{ steps.claude-process.outputs.mention_body }}
          CONTEXT_TYPE: ${{ steps.claude-process.outputs.context_type }}
          CONTEXT_URL: ${{ steps.claude-process.outputs.context_url }}
        run: |
          # Create response based on mention content
          if echo "$MENTION_BODY" | grep -q "review\|analyze"; then
            RESPONSE_TYPE="code_review"
          elif echo "$MENTION_BODY" | grep -q "fix\|bug\|error"; then
            RESPONSE_TYPE="bug_fix"
          elif echo "$MENTION_BODY" | grep -q "feature\|implement\|add"; then
            RESPONSE_TYPE="feature_implementation"
          elif echo "$MENTION_BODY" | grep -q "validate\|check\|test"; then
            RESPONSE_TYPE="validation"
          else
            RESPONSE_TYPE="general"
          fi

          echo "response_type=${RESPONSE_TYPE}" >> $GITHUB_OUTPUT

      - name: 💬 Post Claude response
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');

            // Read Claude integration config
            const config = JSON.parse(fs.readFileSync('.claude/github-integration.json', 'utf8'));

            const responseType = '${{ steps.generate-response.outputs.response_type }}';
            const mentionBody = '${{ steps.claude-process.outputs.mention_body }}';
            const contextType = '${{ steps.claude-process.outputs.context_type }}';

            let responseBody = `## 🤖 Claude Code Assistant Response\n\n`;

            if (responseType === 'validation') {
              responseBody += `### 🔍 Validation Pipeline Status\n\n`;
              responseBody += `I've initiated the enhanced validation pipeline for this repository.\n\n`;
              responseBody += `**Validation includes:**\n`;
              responseBody += `- ✅ TypeScript type checking\n`;
              responseBody += `- ✅ ESLint code quality analysis\n`;
              responseBody += `- ✅ Security pattern scanning\n`;
              responseBody += `- ✅ Unit test execution with coverage\n`;
              responseBody += `- ✅ Integration test validation\n`;
              responseBody += `- ✅ Production build verification\n`;
              responseBody += `- ✅ End-to-end test execution\n`;
              responseBody += `- ✅ Bundle size analysis\n\n`;
              responseBody += `**GitHub Apps Integration:**\n`;
              responseBody += `- 📊 **Codecov**: Coverage reports will be uploaded\n`;
              responseBody += `- 🔒 **CodeQL**: Security analysis in progress\n`;
              responseBody += `- 📦 **Dependabot**: Dependency monitoring active\n\n`;
            } else if (responseType === 'code_review') {
              responseBody += `### 🔍 Code Review Request\n\n`;
              responseBody += `I'm ready to review your code! However, I need additional configuration to perform automated reviews.\n\n`;
              responseBody += `**To enable full code review capabilities:**\n`;
              responseBody += `1. Grant me repository write permissions\n`;
              responseBody += `2. Configure the Claude API key in repository secrets\n`;
              responseBody += `3. Enable the enhanced validation pipeline\n\n`;
            } else {
              responseBody += `### 👋 Hello!\n\n`;
              responseBody += `I'm Claude Code, your AI development assistant for the NetPost V2 project.\n\n`;
              responseBody += `**I can help with:**\n`;
              responseBody += `- 🔍 Code reviews and analysis\n`;
              responseBody += `- 🐛 Bug fixes and error resolution\n`;
              responseBody += `- ✨ Feature implementation with TDD\n`;
              responseBody += `- 🧪 Test generation and validation\n`;
              responseBody += `- 📊 Pipeline integration with Codecov/CodeQL/Dependabot\n\n`;
              responseBody += `**To get started, mention me with specific requests like:**\n`;
              responseBody += `- \`@claude validate this PR\`\n`;
              responseBody += `- \`@claude fix the TypeScript errors\`\n`;
              responseBody += `- \`@claude implement user authentication\`\n`;
              responseBody += `- \`@claude review this code\`\n\n`;
            }

            responseBody += `---\n*Powered by Claude Code Enhanced Validation Pipeline*`;

            if (contextType === 'comment') {
              // Reply to comment
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: responseBody
              });
            } else if (contextType === 'issue') {
              // Comment on issue
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: responseBody
              });
            } else if (contextType === 'pull_request') {
              // Comment on PR
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: responseBody
              });
            }